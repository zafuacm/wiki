import{_ as n,c as a,o as l,P as p}from"./chunks/framework.Bc42vIKE.js";const F=JSON.parse('{"title":"语法学习","description":"","frontmatter":{"comments":true},"headers":[],"relativePath":"basic/grammer/intro.md","filePath":"basic/grammer/intro.md","lastUpdated":1743070079000}'),o={name:"basic/grammer/intro.md"};function e(t,s,r,c,E,y){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="语法学习" tabindex="-1">语法学习 <a class="header-anchor" href="#语法学习" aria-label="Permalink to &quot;语法学习&quot;">​</a></h1><p>关于如何入门 C 语言，网上已经有了丰富的资料，我们这里做一些资料推荐。</p><h2 id="资料推荐" tabindex="-1">资料推荐 <a class="header-anchor" href="#资料推荐" aria-label="Permalink to &quot;资料推荐&quot;">​</a></h2><p>假如您喜欢看听课学习，我推荐以下课程：</p><ul><li>浙江大学翁恺的《C语言程序设计》，可以在 <a href="https://www.icourse163.org/course/0809ZJU007A-199001" target="_blank" rel="noreferrer">mooc</a> 上收看。<a href="https://www.bilibili.com/video/av768150164" target="_blank" rel="noreferrer">bilibili</a> 上可能是转载，不清楚更新是否及时。</li></ul><p>假如喜欢看书，我推荐以下书籍：</p><ul><li><a href="https://book.douban.com/subject/35503091/" target="_blank" rel="noreferrer">C 语言程序设计：现代方法（第二版修订版）</a>，修订版还与时俱进地增加了 C11 和 C18 中的内容。</li><li><a href="https://book.douban.com/subject/26792521/" target="_blank" rel="noreferrer">C Primer Plus</a>，经典老书。</li><li><a href="https://book.douban.com/subject/1139336/" target="_blank" rel="noreferrer">C 程序设计语言</a>，作者是 C 语言之父，可能不适合初学者阅读。</li></ul><p>特别注意远离谭浩强的 <a href="https://book.douban.com/subject/30385709/" target="_blank" rel="noreferrer">C 程序设计</a>。</p><h2 id="补充内容" tabindex="-1">补充内容 <a class="header-anchor" href="#补充内容" aria-label="Permalink to &quot;补充内容&quot;">​</a></h2><p>在此补充一些书籍可能不做介绍的内容。</p><h3 id="提问的智慧" tabindex="-1">提问的智慧 <a class="header-anchor" href="#提问的智慧" aria-label="Permalink to &quot;提问的智慧&quot;">​</a></h3><p>提问需要一定的技巧，阅读 <a href="https://lug.ustc.edu.cn/wiki/doc/smart-questions" target="_blank" rel="noreferrer">提问的技巧 - LUG @ USTC</a> 可以帮助你的问题获得关注。</p><p>以下列举几个蠢问题：</p><ul><li>问一个搜索一下就能得到答案的问题；</li><li>问“这个代码为什么报错”但只发代码不发报错信息的；</li><li>问“这个代码为什么不对” 但只发代码不发结果的；</li><li><a href="https://lug.ustc.edu.cn/wiki/doc/smart-questions/#%E4%B8%8D%E8%AF%A5%E9%97%AE%E7%9A%84%E9%97%AE%E9%A2%98" target="_blank" rel="noreferrer">提问的技巧</a> 中不该问的问题、好问题与蠢问题一节。</li></ul><h3 id="良好格式" tabindex="-1">良好格式 <a class="header-anchor" href="#良好格式" aria-label="Permalink to &quot;良好格式&quot;">​</a></h3><p>C 语言非常灵活，过于聪明的程序员可以编写出除了他们自己之外没人能读懂的程序。在 C 语言中，空格、换行等在很多位置不影响代码表现，因此可以把 Hello World 写的多种多样：</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#9ECBFF;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">int</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(  )</span></span>
<span class="line"><span style="color:#E1E4E8;">{  </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;hello&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; &quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">&quot;world!</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">); </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;   }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#032F62;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">int</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(  )</span></span>
<span class="line"><span style="color:#24292E;">{  </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; &quot;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#032F62;">&quot;world!</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">); </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">      </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;   }</span></span></code></pre></div><p>可以毫无缩进</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#9ECBFF;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;hello world!</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#032F62;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;hello world!</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;}</span></span></code></pre></div><p>甚至一行流</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#9ECBFF;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(){</span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;hello world!</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#032F62;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(){</span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;hello world!</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;}</span></span></code></pre></div><p>再比如国际模糊 C 代码大赛的 1990 年的“最佳小程序”：</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">v,i,j,k,l,s,</span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">99</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">scanf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">%d</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">s);</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">a</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">s;v</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">[j</span><span style="color:#F97583;">*=</span><span style="color:#E1E4E8;">v]</span><span style="color:#F97583;">-</span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">[i],k</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">i</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">s,j</span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;">(v</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">j</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">k</span><span style="color:#F97583;">&amp;&amp;!!</span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n\\n%c</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">l</span><span style="color:#F97583;">&lt;&lt;!</span><span style="color:#E1E4E8;">j),</span><span style="color:#9ECBFF;">&quot; #Q&quot;</span><span style="color:#E1E4E8;">[l</span><span style="color:#F97583;">^</span><span style="color:#E1E4E8;">v</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">(l</span><span style="color:#F97583;">^</span><span style="color:#E1E4E8;">j)</span><span style="color:#F97583;">&amp;</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">])</span><span style="color:#F97583;">&amp;&amp;++</span><span style="color:#E1E4E8;">l</span><span style="color:#F97583;">||</span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">[i]</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;">v</span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;">v</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">i</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">j</span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;">v</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">i</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">j))</span><span style="color:#F97583;">&amp;&amp;!</span><span style="color:#E1E4E8;">(l</span><span style="color:#F97583;">%=</span><span style="color:#E1E4E8;">s),v</span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;">(i</span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">j</span><span style="color:#F97583;">?</span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">[i</span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;">k]</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">:++</span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">[i])</span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">k</span><span style="color:#F97583;">&amp;&amp;++</span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">[</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">i])</span></span>
<span class="line"><span style="color:#E1E4E8;">		;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">v,i,j,k,l,s,</span><span style="color:#E36209;">a</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">99</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#6F42C1;">main</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">scanf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%d</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">s);</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">a</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">s;v</span><span style="color:#D73A49;">=</span><span style="color:#E36209;">a</span><span style="color:#24292E;">[j</span><span style="color:#D73A49;">*=</span><span style="color:#24292E;">v]</span><span style="color:#D73A49;">-</span><span style="color:#E36209;">a</span><span style="color:#24292E;">[i],k</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">i</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">s,j</span><span style="color:#D73A49;">+=</span><span style="color:#24292E;">(v</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">j</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">k</span><span style="color:#D73A49;">&amp;&amp;!!</span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n\\n%c</span><span style="color:#032F62;">&quot;</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">l</span><span style="color:#D73A49;">&lt;&lt;!</span><span style="color:#24292E;">j),</span><span style="color:#032F62;">&quot; #Q&quot;</span><span style="color:#24292E;">[l</span><span style="color:#D73A49;">^</span><span style="color:#24292E;">v</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">(l</span><span style="color:#D73A49;">^</span><span style="color:#24292E;">j)</span><span style="color:#D73A49;">&amp;</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">])</span><span style="color:#D73A49;">&amp;&amp;++</span><span style="color:#24292E;">l</span><span style="color:#D73A49;">||</span><span style="color:#E36209;">a</span><span style="color:#24292E;">[i]</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;">v</span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;">v</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">i</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">j</span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;">v</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">i</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">j))</span><span style="color:#D73A49;">&amp;&amp;!</span><span style="color:#24292E;">(l</span><span style="color:#D73A49;">%=</span><span style="color:#24292E;">s),v</span><span style="color:#D73A49;">||</span><span style="color:#24292E;">(i</span><span style="color:#D73A49;">==</span><span style="color:#24292E;">j</span><span style="color:#D73A49;">?</span><span style="color:#E36209;">a</span><span style="color:#24292E;">[i</span><span style="color:#D73A49;">+=</span><span style="color:#24292E;">k]</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">:++</span><span style="color:#E36209;">a</span><span style="color:#24292E;">[i])</span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">k</span><span style="color:#D73A49;">&amp;&amp;++</span><span style="color:#E36209;">a</span><span style="color:#24292E;">[</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">i])</span></span>
<span class="line"><span style="color:#24292E;">		;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>这几份代码都能够成功运行，但显然可读性大大降低。在请求他人帮助时，<strong>将代码格式化是一种礼貌</strong>，否则就是在折磨别人的眼睛。</p><p>有很多在线格式化工具，比如 <a href="https://formatter.org/" target="_blank" rel="noreferrer">Code Formatter and Code Beautifier</a>。</p><h3 id="代码剪切板" tabindex="-1">代码剪切板 <a class="header-anchor" href="#代码剪切板" aria-label="Permalink to &quot;代码剪切板&quot;">​</a></h3><p>很多时候，光盯着代码看很难看出问题，需要上手跑一跑。</p><p>假如你选择直接将代码粘贴到 QQ 等聊天软件，不但会让代码失去格式、高亮，如 <code>/st</code> 还会被转义成表情，长文本还会导致刷屏。</p><p>建议选择代码剪切板，如：</p><ul><li><a href="https://paste.nugine.xyz/" target="_blank" rel="noreferrer">在线剪贴板 - nugine</a>。</li><li><a href="https://pastebin.com/" target="_blank" rel="noreferrer">pastebin</a>。</li><li><a href="https://pastebin.mozilla.org/" target="_blank" rel="noreferrer">Pastebin - Mozilla</a>。</li><li><a href="https://carbon.now.sh/" target="_blank" rel="noreferrer">Carbon</a>，代码转换为图片。</li><li><a href="https://paste.ubuntu.com/" target="_blank" rel="noreferrer">Pastebin - Ubuntu</a>。</li><li><a href="https://paste.ubuntu.com/" target="_blank" rel="noreferrer">Gist - Github</a>。</li><li><a href="https://www.luogu.com.cn/paste" target="_blank" rel="noreferrer">Paste - 洛谷</a>。</li></ul><h2 id="下一步" tabindex="-1">下一步 <a class="header-anchor" href="#下一步" aria-label="Permalink to &quot;下一步&quot;">​</a></h2><p>在算法竞赛中，我们只需学习语法的一个子集，就足以表达我们所设计的算法了。</p><p>入门 C 语言是很快的，可能只需半个月。我个人认为，假如你能搞懂下面计算 Fib 序列的代码，就可以开始刷题了。</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;time.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> i64;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">i64 </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">n</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (n </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">(n </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">(n </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">double</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">method1</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">n</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">clock_t</span><span style="color:#E1E4E8;"> start </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">clock</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> n; </span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">i) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;f(</span><span style="color:#79B8FF;">%d</span><span style="color:#9ECBFF;">) = </span><span style="color:#79B8FF;">%lld\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, i, </span><span style="color:#B392F0;">f</span><span style="color:#E1E4E8;">(i));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">clock_t</span><span style="color:#E1E4E8;"> stop </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">clock</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">double</span><span style="color:#E1E4E8;">)(stop </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> start) </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> CLOCKS_PER_SEC;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">i64 </span><span style="color:#FFAB70;">fib</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">double</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">method2</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">n</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">clock_t</span><span style="color:#E1E4E8;"> start </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">clock</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> n; </span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">i) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (i </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">fib</span><span style="color:#E1E4E8;">[i] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">fib</span><span style="color:#E1E4E8;">[i] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">fib</span><span style="color:#E1E4E8;">[i </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">fib</span><span style="color:#E1E4E8;">[i </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;fib[</span><span style="color:#79B8FF;">%d</span><span style="color:#9ECBFF;">] = </span><span style="color:#79B8FF;">%lld\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, i, </span><span style="color:#FFAB70;">fib</span><span style="color:#E1E4E8;">[i]);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">clock_t</span><span style="color:#E1E4E8;"> stop </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">clock</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">double</span><span style="color:#E1E4E8;">)(stop </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> start) </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> CLOCKS_PER_SEC;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> n </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">scanf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">%d</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">n);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> n </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> n </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">45</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">double</span><span style="color:#E1E4E8;"> duration1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">method1</span><span style="color:#E1E4E8;">(n);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">double</span><span style="color:#E1E4E8;"> duration2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">method2</span><span style="color:#E1E4E8;">(n);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;method 1 use </span><span style="color:#79B8FF;">%.6lf</span><span style="color:#9ECBFF;"> ms</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, duration1 </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;method 2 use </span><span style="color:#79B8FF;">%.6lf</span><span style="color:#9ECBFF;"> ms</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, duration2 </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;0 &lt; n &lt;= 45!&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;time.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> i64;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">i64 </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">n</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (n </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">(n </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">(n </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">double</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">method1</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">n</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">clock_t</span><span style="color:#24292E;"> start </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">clock</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> n; </span><span style="color:#D73A49;">++</span><span style="color:#24292E;">i) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;f(</span><span style="color:#005CC5;">%d</span><span style="color:#032F62;">) = </span><span style="color:#005CC5;">%lld\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, i, </span><span style="color:#6F42C1;">f</span><span style="color:#24292E;">(i));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">clock_t</span><span style="color:#24292E;"> stop </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">clock</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">double</span><span style="color:#24292E;">)(stop </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> start) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> CLOCKS_PER_SEC;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">i64 </span><span style="color:#E36209;">fib</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">double</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">method2</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">n</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">clock_t</span><span style="color:#24292E;"> start </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">clock</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> n; </span><span style="color:#D73A49;">++</span><span style="color:#24292E;">i) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">fib</span><span style="color:#24292E;">[i] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">fib</span><span style="color:#24292E;">[i] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#E36209;">fib</span><span style="color:#24292E;">[i </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#E36209;">fib</span><span style="color:#24292E;">[i </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fib[</span><span style="color:#005CC5;">%d</span><span style="color:#032F62;">] = </span><span style="color:#005CC5;">%lld\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, i, </span><span style="color:#E36209;">fib</span><span style="color:#24292E;">[i]);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">clock_t</span><span style="color:#24292E;"> stop </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">clock</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">double</span><span style="color:#24292E;">)(stop </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> start) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> CLOCKS_PER_SEC;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> n </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">scanf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%d</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">n);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> n </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> n </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">45</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> duration1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">method1</span><span style="color:#24292E;">(n);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> duration2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">method2</span><span style="color:#24292E;">(n);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;method 1 use </span><span style="color:#005CC5;">%.6lf</span><span style="color:#032F62;"> ms</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, duration1 </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;method 2 use </span><span style="color:#005CC5;">%.6lf</span><span style="color:#032F62;"> ms</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, duration2 </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;0 &lt; n &lt;= 45!&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://oi-wiki.org/lang/" target="_blank" rel="noreferrer">语言基础 - OIWiki</a>。</li></ul>`,36)]))}const u=n(o,[["render",e]]);export{F as __pageData,u as default};
